"use strict";(self.webpackChunkuse_winter_final=self.webpackChunkuse_winter_final||[]).push([[4],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return k}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=u(t),k=a,m=c["".concat(i,".").concat(k)]||c[k]||d[k]||o;return t?r.createElement(m,s(s({ref:n},l),{},{components:t})):r.createElement(m,s({ref:n},l))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=c;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4186:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return l},default:function(){return c}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),s=["components"],p={sidebar_position:8},i="Transfer",u={unversionedId:"APIs/Transfer",id:"APIs/Transfer",isDocsHomePage:!1,title:"Transfer",description:"The Transfer API allows you to transfer USD to fund a user's cash account or transfer USD out to user's bank account.",source:"@site/docs/APIs/8_Transfer.md",sourceDirName:"APIs",slug:"/APIs/Transfer",permalink:"/docs/APIs/Transfer",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/APIs/8_Transfer.md",version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Quote",permalink:"/docs/APIs/Quote"},next:{title:"Ledger",permalink:"/docs/APIs/Ledger"}},l=[{value:"Add bank information to user account",id:"add-bank-information-to-user-account",children:[{value:"Body payload",id:"body-payload",children:[]},{value:"Success Response",id:"success-response",children:[]},{value:"Error Response",id:"error-response",children:[]}]},{value:"Deposit funds from user&#39;s bank account",id:"deposit-funds-from-users-bank-account",children:[{value:"Body payload",id:"body-payload-1",children:[]},{value:"Success Response",id:"success-response-1",children:[]},{value:"Error Response",id:"error-response-1",children:[]}]},{value:"Withdraw funds to user&#39;s bank account",id:"withdraw-funds-to-users-bank-account",children:[{value:"Body payload",id:"body-payload-2",children:[]},{value:"Success Response",id:"success-response-2",children:[]},{value:"Success Response",id:"success-response-3",children:[]},{value:"Error Response",id:"error-response-2",children:[]}]}],d={toc:l};function c(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"transfer"},"Transfer"),(0,o.kt)("p",null,"The Transfer API allows you to transfer USD to fund a user's cash account or transfer USD out to user's bank account."),(0,o.kt)("p",null,"Currently, we only support ACH transfer to USA based banks. We recommend using ",(0,o.kt)("a",{parentName:"p",href:"https://plaid.com/"},"Plaid")," to obtain user's account and routing numbers."),(0,o.kt)("p",null,"Note, crypto transfers & withdrawals are not supported yet."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#add"},"Add bank information to user account")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#deposit"},"Deposit")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#withdraw"},"Withdraw"))),(0,o.kt)("a",{name:"add"}),(0,o.kt)("h2",{id:"add-bank-information-to-user-account"},"Add bank information to user account"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"URL")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"/v1/account/<accountId>/banking/add/")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Method")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Auth required")," : Yes (API key and secret are required)"),(0,o.kt)("h3",{id:"body-payload"},"Body payload"),(0,o.kt)("p",null,"Sample body payload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "account_owner_name": "John Doe",\n  "bank_account_type": "CHECKING",\n  "bank_account_number": "32131231abc",\n  "bank_routing_number": "121000358",\n  "bank_nickname": "Bank of America Checking"\n}\n')),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"account_owner_name")," - String. The name of the bank account owner."),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"bank_account_type")," - Enum. Type of bank account. We recommend users fund from a checking account. Options: ",(0,o.kt)("inlineCode",{parentName:"p"},"CHECKING"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SAVINGS")),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"bank_account_number")," - String. The bank account number."),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"bank_routing_number")," - String. The bank routing number."),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"bank_nickname")," - String. A user inputted nickname for the bank for labeling purposes"),(0,o.kt)("h3",{id:"success-response"},"Success Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,o.kt)("h3",{id:"error-response"},"Error Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"400 BAD REQUEST")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Condition")," : If accountId is invalid or if organization does not have access to this account."),(0,o.kt)("a",{name:"deposit"}),(0,o.kt)("h2",{id:"deposit-funds-from-users-bank-account"},"Deposit funds from user's bank account"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"URL")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"/v1/account/<accountId>/banking/deposit/")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Method")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Auth required")," : Yes (API key and secret are required)"),(0,o.kt)("h3",{id:"body-payload-1"},"Body payload"),(0,o.kt)("p",null,"Sample body payload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "transfer_amount": 500.00,\n  "scheduled_transfer_date": "2021-11-12",\n  "transfer_date": "2021-11-15"\n}\n')),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"transfer_amount")," - Double. The amount of USD to deposit"),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"scheduled_transfer_date")," - String, optional. The datetime when the transfer is scheduled for"),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"transfer_date")," - String. The datetime when the transfer will be live"),(0,o.kt)("h3",{id:"success-response-1"},"Success Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,o.kt)("p",null,"Sample response payload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "transferId": 123415\n}\n')),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"transferId")," - Int. The ID of transfer. Can use as receipt."),(0,o.kt)("h3",{id:"error-response-1"},"Error Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"400 BAD REQUEST")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Condition")," : If accountId is invalid or if organization does not have access to this account or user does not have a bank account attached to their account"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"409 BANK DENIED")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Condition")," : Bank has denied deposit request or user does not have enough funds"),(0,o.kt)("a",{name:"withdraw"}),(0,o.kt)("h2",{id:"withdraw-funds-to-users-bank-account"},"Withdraw funds to user's bank account"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"URL")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"/v1/account/<accountId>/banking/withdraw/")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Method")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Auth required")," : Yes (API key and secret are required)"),(0,o.kt)("h3",{id:"body-payload-2"},"Body payload"),(0,o.kt)("p",null,"Sample body payload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "transfer_amount": 500.00,\n  "scheduled_transfer_date": "2021-11-12",\n  "transfer_date": "2021-11-15"\n}\n')),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"transfer_amount")," - Double. The amount of USD to deposit"),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"scheduled_transfer_date")," - String, optional. The datetime when the transfer is scheduled for"),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"transfer_date")," - String. The datetime when the transfer will be live"),(0,o.kt)("h3",{id:"success-response-2"},"Success Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,o.kt)("p",null,"Sample response payload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "transferId": 123415\n}\n')),(0,o.kt)("p",null,"-"," ",(0,o.kt)("strong",{parentName:"p"},"transferId")," - Int. The ID of transfer. Can use as receipt."),(0,o.kt)("h3",{id:"success-response-3"},"Success Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,o.kt)("h3",{id:"error-response-2"},"Error Response"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"400 BAD REQUEST")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Condition")," : If accountId is invalid or if organization does not have access to this account or user does not have a bank account attached to their account"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"409 BANK DENIED")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Condition")," : Bank has denied withdraw request or bank information is invalid"))}c.isMDXComponent=!0}}]);